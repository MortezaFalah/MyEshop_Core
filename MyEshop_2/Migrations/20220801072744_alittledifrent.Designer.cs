// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyEshop_2.Data;

#nullable disable

namespace MyEshop_2.Migrations
{
    [DbContext(typeof(MyEshopContext2))]
    [Migration("20220801072744_alittledifrent")]
    partial class alittledifrent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyEshop_2.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Description = "محصولات حوزه دیجیتال مانند گوشی و تبلت و لپتاپ",
                            name = "کالای دیجیتال"
                        },
                        new
                        {
                            id = 2,
                            Description = "لوازم جانبی ابزار کامپیوتر",
                            name = "لوازم کامپیوتر"
                        },
                        new
                        {
                            id = 3,
                            Description = " تمامی لوازم مورد نیاز شما برای عکاسی حرفه ای",
                            name = "لوازم عکاسی"
                        },
                        new
                        {
                            id = 4,
                            Description = "کلیه لوازم صوتی تصویری خانه خود را از ما بخواهید",
                            name = "صوتی تصویری"
                        });
                });

            modelBuilder.Entity("MyEshop_2.Models.CategoryToProduct", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("categoryToProducts");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("MyEshop_2.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("QuantityinStock")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("money");

                    b.HasKey("id");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            id = 1,
                            QuantityinStock = 0,
                            price = 5m
                        },
                        new
                        {
                            id = 2,
                            QuantityinStock = 100,
                            price = 300000m
                        },
                        new
                        {
                            id = 3,
                            QuantityinStock = 3,
                            price = 55.600000m
                        },
                        new
                        {
                            id = 4,
                            QuantityinStock = 4,
                            price = 50.980000m
                        });
                });

            modelBuilder.Entity("MyEshop_2.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinaly")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MyEshop_2.Models.OrderDetails", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("DetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("MyEshop_2.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Description = "گوشی سامسونگ گلکسی s7 edge پرچمدار سابق سامسونگ که هنوز هم حرف های زیادی برای گفتن دارد",
                            ItemId = 1,
                            Name = "گوشی سامسونگ s7 edge"
                        },
                        new
                        {
                            id = 2,
                            Description = "موس گیمینگ گرین مدل GM 402 دارای رنگ های rgb  و کلید های بک و فوروارد در دو طرف میباشد...این موس دارای 24 ماه گارانتی گرین می باشد",
                            ItemId = 2,
                            Name = "موس گرین GM 402"
                        },
                        new
                        {
                            id = 3,
                            Description = "کانن 5D مارک ۴ برای عکاسانی ساخته شده که می‌خواهند بهترین دوربین همه‌کاره‌ی این شرکت را داشته باشند. دوربینی مجهز به پیشرفته‌ترین سنسور تصویری که کانن تا سال ۲۰۱۶ ساخته و امکاناتی که باعث شده این دوربین تا چهار سال دیگر در کورس رقابت برترین‌ دوربین‌های DSLR فول‌ُفریم باقی بماند.",
                            ItemId = 3,
                            Name = "دوربین کانن 5d"
                        },
                        new
                        {
                            id = 4,
                            Description = "تلویزیون ال ای دی هوشمند سونی مدل 65X85J سایز 65 اینچ تلویزیونی مناسب برای تماشای برنامه های تلویزیونی و اینترنتی شما میباشد. این تلویزیون دارای دو درگاه USB آن هم به شما امکان پخش تصاویر و ویدیو های داخل حافظه های جانبی شما را با کیفیت 4K می‌دهد.",
                            ItemId = 4,
                            Name = "تلویزیون ال ای دی هوشمند سونی مدل 65X85J سایز 65 اینچ"
                        });
                });

            modelBuilder.Entity("MyEshop_2.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyEshop_2.Models.CategoryToProduct", b =>
                {
                    b.HasOne("MyEshop_2.Models.Category", "Category")
                        .WithMany("categoryToProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyEshop_2.Models.Product", "Product")
                        .WithMany("CategoryToProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyEshop_2.Models.Order", b =>
                {
                    b.HasOne("MyEshop_2.Models.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyEshop_2.Models.OrderDetails", b =>
                {
                    b.HasOne("MyEshop_2.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyEshop_2.Models.Product", "product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("MyEshop_2.Models.Product", b =>
                {
                    b.HasOne("MyEshop_2.Models.Item", "Item")
                        .WithOne("Product")
                        .HasForeignKey("MyEshop_2.Models.Product", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MyEshop_2.Models.Category", b =>
                {
                    b.Navigation("categoryToProducts");
                });

            modelBuilder.Entity("MyEshop_2.Models.Item", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("MyEshop_2.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("MyEshop_2.Models.Product", b =>
                {
                    b.Navigation("CategoryToProducts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("MyEshop_2.Models.Users", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
